// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelos

model User {
  id                 String      @id // ID fornecido pelo Clerk
  name               String?     // Nome do usuário (opcional)
  email              String
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  subscriptionStatus String      // Status da assinatura mensal (ex: "Ativa", "Inativa", "Expirada")
  subscriptionType   String      // Tipo da assinatura (ex: "Mensal", "Anual"), se precisar de mais granularidade
  credits            Int         @default(3)

  stories            StoryData[] // Relacionamento com histórias criadas pelo usuário
}

model StoryData {
  id          Int      @id @default(autoincrement())
  storyId     String
  storySubject String   // Assunto ou tema da história (ex: "Animais", "Aventura")
  storyType   String    // Tipo de história (ex: "Fantasia", "Educação")
  ageGroup    String    // Faixa etária recomendada (ex: "3-5 anos", "6-8 anos")
  imageStyle  String    // Estilo da imagem (ex: "Cartoon", "Realista")
  output      Json      // Dados JSON contendo o conteúdo da história (ex: páginas, texto, imagens, áudios)
  coverImage  String
  createdBy   String    // ID do usuário que criou a história
  user        User      @relation(fields: [createdBy], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

